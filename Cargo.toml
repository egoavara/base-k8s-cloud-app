[workspace]
members = [
    "app/graph-hmb", "app/event-hmb", "lib/graph-guard",
]
resolver = "2"

[workspace.dependencies]
http = { version = "1", features = [] }
tokio = { version = "1", features = ["full"] }

reqwest = { version = "0.11.23", default-features = false, features = ["json", "rustls-tls", "gzip"] }

rdkafka = { version = "0.36.0", features = ["cmake-build"] }

serde = { version = "1", features = [] }
serde_json = { version = "1", features = [] }

regex = { version = "1", features = [] }

opentelemetry = { version = "0.21.0", features = ["trace", "logs", "metrics"] }
opentelemetry_sdk = { version = "0.21.0", features = ["trace", "logs", "metrics", "rt-tokio"] }
opentelemetry-stdout = { version = "0.2.0", features = ["logs", "trace", "metrics"] }
opentelemetry-otlp = { version = "0.14.0", features = ["trace", "logs", "http-proto", "reqwest-rustls", "metrics"] }
opentelemetry-http = { version = "0.10.0", features = [] }

tracing = { version = "0.1" }
tracing-appender = { version = "0.2" }
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
tracing-opentelemetry = { version = "0.22.0", features = [] }

tempfile = { version = "3" }

axum = { version = "0.7.3", features = ["ws", "tracing"] }
axum-extra = { version = "0.9.1", features = ["typed-header"] }
axum-valid = { version = "0.14.0", default-features = false, features = ["garde"] }
axum-client-ip = { version = "0.5.0", features = [] }

tower = { version = "0.4.13", features = [] }
tower-http = { version = "0.5.0", features = ["trace"] }

garde = { version = "0.17.0" }

async-graphql = { version = "7.0.0", features = ["dataloader", "uuid", "graphiql", "apollo_persisted_queries", "time"] }
async-graphql-axum = { version = "7.0.0", features = [] }

time = { version = "0.3.31", features = ["serde", "serde-human-readable", "parsing"] }

async-trait = { version = "0.1.77", features = [] }

sqlx = { version = "0.7.3", features = ["runtime-tokio-rustls", "macros", "postgres", "uuid", "time", "json", "ipnetwork", "regexp"] }
sea-query = { version = "0.30.6", features = ["attr", "derive", "backend-postgres", "postgres-array", "with-uuid", "with-time", "with-json", "with-ipnetwork"] }
sea-query-binder = { version = "0.5.0", features = ["runtime-tokio-rustls", "sqlx-postgres", "postgres-array", "with-uuid", "with-time", "with-json", "with-ipnetwork"] }

task-local-extensions = { version = "0.1.4" }

tonic = { version = "0.10.2", features = [] }

graph-guard = { path = "lib/graph-guard" }

anyhow = { version = "1", features = [] }