[workspace]
members = [
    "app/graph-hmb",
    "app/event-otype",
    "app/event-hmb",
    "app/run-otype",
    "lib/graph-guard",
    "lib/bootstrap",
    "lib/openfga-client",
    "lib/table-traits",
    "lib/table-traits-derive",
    "lib/table-traits-core",
    "lib/table-traits-impl",
    "lib/gql-impl",
    "lib/gql-impl-derive",
    "lib/gql-impl-macro",
    "lib/gql-impl-loader",
    "lib/gql-impl-loader-sqlx", "event/notify", "event/rest-notify",
]
resolver = "2"

[workspace.metadata.cargo-udeps.ignore]
normal = ["ahash"]

[workspace.dependencies]

tap = { version = "1.0.1" }

hyper = { version = "1.3.1" }

http = { version = "1", features = [] }
tokio = { version = "1", features = ["full"] }
futures = { version = "0.3.30", features = [] }

reqwest = { version = "0.12.4", default-features = false, features = ["json", "rustls-tls", "gzip"] }

rdkafka = { version = "0.36.0", features = ["cmake-build"] }

serde = { version = "1", features = [] }
serde_json = { version = "1", features = [] }
serde_qs = { version = "0.13.0", features = [] }

regex = { version = "1", features = [] }

opentelemetry = { version = "0.22.0", features = ["trace", "logs", "metrics"] }
opentelemetry_sdk = { version = "0.22.0", features = ["trace", "logs", "metrics", "rt-tokio"] }
opentelemetry-stdout = { version = "0.3.0", features = ["logs", "trace", "metrics"] }
opentelemetry-otlp = { version = "0.15.0", features = ["serialize", "trace", "logs", "http-proto", "reqwest-rustls", "metrics"] }
opentelemetry-http = { version = "0.11.1", features = [] }

tracing = { version = "0.1" }
tracing-appender = { version = "0.2" }
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
tracing-opentelemetry = { version = "0.23.0", features = [] }

tempfile = { version = "3" }

axum = { version = "0.7.3", features = ["ws", "tracing"] }
axum-extra = { version = "0.9.1", features = ["typed-header"] }
axum-valid = { version = "0.18.0", default-features = false, features = ["garde"] }
axum-client-ip = { version = "0.6.0", features = [] }

tower = { version = "0.4.13", features = [] }
tower-http = { version = "0.5.0", features = ["trace"] }

garde = { version = "0.18.0" }

uuid = { version = "1.8.0", features = ["v4"] }

async-graphql = { version = "7.0.0", features = ["dataloader", "uuid", "graphiql", "apollo_persisted_queries", "time"] }
async-graphql-axum = { version = "7.0.0", features = [] }
async-graphql-value = { version = "7.0.0", features = [] }

time = { version = "0.3.31", features = ["serde", "serde-human-readable", "parsing"] }

async-trait = { version = "0.1.77", features = [] }

sqlx = { version = "0.7.3", features = ["runtime-tokio-rustls", "macros", "postgres", "uuid", "time", "json", "ipnetwork", "regexp"] }
sea-query = { version = "0.30", features = [
    "derive",
    "attr",
    "backend-postgres",
    "with-json",
    "with-uuid",
    "with-ipnetwork",
    "with-mac_address",
    "postgres-array",
    "postgres-interval"
] }
sea-query-binder = { version = "0.5.0", features = [
    "sqlx-postgres",
    "with-json",
    "with-uuid",
    "with-time",
    "with-ipnetwork",
    "with-mac_address",
    "postgres-array",
    "runtime-async-std-native-tls",
] }

task-local-extensions = { version = "0.1.4" }

tonic = { version = "0.11.0", features = [] }

itertools = { version = "0.12.1" }

anyhow = { version = "1", features = [] }
thiserror = { version = "1", features = [] }




bootstrap = { path = "lib/bootstrap" }
graph-guard = { path = "lib/graph-guard" }
openfga-client = { path = "lib/openfga-client" }
table-traits = { path = "lib/table-traits" }

